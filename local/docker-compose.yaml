services:
  sports-day-ui:
    image: sports-day-ui
    container_name: sports-day-ui
    networks:
     - sports-day
    profiles:
     - include-ui
    environment:
      EXTERNAL_API_URL: https://sports-day-service.${LOCAL_STACK}.nip.io:8443
      SERVER_NAME: sports-day-ui.${LOCAL_STACK}.nip.io
      SSL_CERTIFICATE: /etc/ssl/certs/nginx/sports-day-ui/sports-day-ui.crt
      SSL_CERTIFICATE_KEY: /etc/ssl/certs/nginx/sports-day-ui/sports-day-ui.key
    ports:
      - ${LOCAL_STACK}:9443:443
    volumes:
      - ./certs:/etc/ssl/certs/nginx

  sports-day-service-proxy:
    image: nginx
    container_name: sports-day-service-proxy
    profiles:
      - include-service
    networks:
      - sports-day
    environment:
      PROXY_PASS: http://sports-day-service:8080
      SERVER_NAME: sports-day-service.${LOCAL_STACK}.nip.io
      SSL_CERTIFICATE: /etc/ssl/certs/nginx/sports-day-service/sports-day-service.crt
      SSL_CERTIFICATE_KEY: /etc/ssl/certs/nginx/sports-day-service/sports-day-service.key
    ports:
      - "${LOCAL_STACK}:8443:443"
    volumes:
      - ./nginx/service-proxy.template.conf:/etc/nginx/templates/default.conf.template
      - ./certs:/etc/ssl/certs/nginx
    depends_on:
      sports-day-service:
        condition: service_healthy

  sports-day-service:
    image: sports-day-service
    container_name: sports-day-service
    networks:
      - sports-day
    profiles:
      - include-service
    environment:
      DB_URL: jdbc:postgresql://sports-day-db:5432/sports_day
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      OAUTH2_URL: https://sports-day-auth.${LOCAL_STACK}.nip.io:8085/realms/ratracejoe
      UI_DOMAIN: https://sports-day-ui.${LOCAL_STACK}.nip.io:9443/
      JAVA_OPTS: > 
        -Djavax.net.ssl.trustStore=/etc/ssl/certs/sportsday.truststore.jks 
        -Djavax.net.ssl.trustStorePassword=changeit 
        -Djavax.net.ssl.keyStore=/etc/ssl/certs/sports-day-service/sports-day-service.keystore.jks 
        -Djavax.net.ssl.keyStorePassword=changeit
    ports:
      # Required when running the UI in dev mode on top of the service in docker
      - "${LOCAL_STACK}:8080:8080"
    volumes:
      - ./certs/:/etc/ssl/certs/
    depends_on:
      auth-healthcheck:
        condition: service_completed_successfully
      sports-day-db-migration:
        condition: service_completed_successfully

  sports-day-db-migration:
    image: sports-day-db-migration
    container_name: sports-day-db-migration
    networks:
      - sports-day
    environment:
      LIQUIBASE_DRIVER: org.postgresql.Driver
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://sports-day-db:5432/sports_day
      LIQUIBASE_COMMAND_USERNAME: sportsAdmin
      LIQUIBASE_COMMAND_PASSWORD: SP%RTS
    depends_on:
      sports-day-db:
        condition: service_healthy

  sports-day-db:
    image: postgres:latest
    container_name: sports-day-db
    networks:
      - sports-day
    environment:
      POSTGRES_USER: sportsAdmin
      POSTGRES_PASSWORD: SP%RTS
      POSTGRES_DB: sports_day
    ports:
      - "${LOCAL_STACK}:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U keycloak -d auth
      interval: 10s
      timeout: 3s
      retries: 3

  redis:
    image: redis
    container_name: sports-day-cache
    networks:
      - sports-day
    ports:
      - "${LOCAL_STACK}:6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: sports-day-zk
    networks:
      - sports-day
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: sports-day-audit
    networks:
      - sports-day
    depends_on:
      - zookeeper
    ports:
      - "${LOCAL_STACK}:29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${LOCAL_STACK}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  auth-db:
    image: postgres
    container_name: sports-day-auth-db
    networks:
      - sports-day
    restart: always
    ports:
      - "${LOCAL_STACK}:5433:5432"
    environment:
      POSTGRES_ROOT_PASSWORD: keycloak123
      POSTGRES_DB: auth
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: kc-password
    healthcheck:
      test: pg_isready -U keycloak -d auth
      interval: 10s
      timeout: 3s
      retries: 3

  auth:
    image: quay.io/keycloak/keycloak:22.0
    container_name: sports-day-auth
    networks:
      - sports-day
    command: start-dev --import-realm --https-port 8085 --http-enabled false --health-enabled true
    ports:
      - "${LOCAL_STACK}:8085:8085"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin-pw
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db:5432/auth
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: kc-password
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/certs/sports-day-auth/sports-day-auth.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/certs/sports-day-auth/sports-day-auth.key
    depends_on:
      auth-db:
        condition: service_healthy
    volumes:
      - ./auth/:/opt/keycloak/data/import/:ro
      - ./certs:/opt/keycloak/certs

  auth-healthcheck:
    image: curlimages/curl:latest
    container_name: auth-healthcheck
    networks:
      - sports-day
    depends_on:
      - auth
    entrypoint: "curl --retry 24 --retry-delay 5 --max-time 120 --retry-connrefused http://auth:8080/health/ready"

networks:
  sports-day:
    driver: bridge

volumes:
  postgres_data:
